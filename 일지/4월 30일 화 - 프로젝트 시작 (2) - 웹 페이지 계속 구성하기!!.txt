4월 30일 화 → ※ ▶ ◈ ∴ 🫡

login.html을 통해 로그인 화면을 통해 cctv.html까지 넣는건 성공했다.


- SQLite 테이블 생성해서 쿼리문을 날려 아이디와 패스워드를 관리하도록 하자!
name이 뜨도록 설정해주면 좋을 듯 하다.

그럴려면 SQLite와 login.html을 연동할 코드를 작성해줄 필요성이 있다.

SQLite manager에서 SQLite 데이터베이스 파일('database.db')열어야한다.
 - 그럼 여기서 대게 메뉴나 버튼을 통해 "Open Database"또는 유사한 옵션을 선택할 수 있다고 한다.
 SQL 쿼리를 실행하려면 주로 쿼리 입력란이나 쿼리 실행 버튼이 있는 부분을 찾아서 사용합니다.
??? - 작업을 마치고 나서는 안전하게 SQLite Manager를 종료하고, 필요하다면 데이터베이스 파일도 닫습니다.

 SQLite Manager 앱을 사용하여 SQLite 데이터베이스와 상호 작용할 수 있습니다. 



>> SQLite에 table을 생성하고 
파이썬에서 쿼리문을 통해서 id를 추가해야하는건가요?


----

database is locked

"OperationalError: database is locked" 오류는 
SQLite의 파일 락(lock)이 발생한 것이 아니라, Python 코드에서 SQLite 데이터베이스에 대한 연결이 동시에 여러 스레드 또는 프로세스에서 사용되는 경우에 발생할 수 있습니다. 
이러한 경우에는 SQLite 데이터베이스에 대한 동시 쓰기 작업을 제어하는 것이 중요합니다.


트랜잭션을 빠르게 닫아주려면 커밋(commit)을 사용하여 트랜잭션을 완료하고 데이터베이스에 변경사항을 
즉시 반영해야 합니다. SQLite에서는 트랜잭션을 사용하여 여러 쓰기 작업을 묶을 수 있으며, 모든 쓰기 작업을 완료한 후에 커밋을 호출하여 트랜잭션을 종료합니다.

다음은 Python에서 SQLite 데이터베이스에 대한 트랜잭션을 사용하는 예시입니다:

위 코드에서 BEGIN TRANSACTION은 트랜잭션을 시작하고, conn.commit()은 트랜잭션을 커밋하여 변경사항을 데이터베이스에 적용합니다. 만약 중간에 에러가 발생하면 conn.rollback()을 호출하여 트랜잭션을 롤백하여 이전 상태로 되돌립니다.













