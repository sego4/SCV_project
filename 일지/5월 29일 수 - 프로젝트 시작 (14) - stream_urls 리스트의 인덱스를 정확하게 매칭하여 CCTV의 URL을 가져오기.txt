5월 29일 수 → ※ ▶ ◈ ∴ 🫡 ❤ …

-----------------------------------------------------------------
일단 방향성은 잡혔다.
아직 잘은 모르지만...


이 app.py 파일은 웹 애플리케이션에서 CCTV 스트림을 제공하고 페이지에 렌더링하는 기능을 구현한 코드입니다. 주요 부분을 단계별로 설명하겠습니다.

1. CCTVStream 클래스
CCTVStream 클래스는 CCTV 스트림을 처리하는 클래스입니다. URL을 입력받아 프레임을 생성하고, 각 프레임을 예측 모델을 통해 처리합니다.
...코드_:
__init__(self, url): URL을 인자로 받아 generate_frames 메서드를 호출합니다.
generate_frames(self): OpenCV를 사용해 비디오 스트림을 열고, 프레임을 읽어오며, 예측 모델을 통해 처리한 후 결과를 JPEG 형식으로 인코딩하여 스트리밍합니다.


2. CCTV 프레임 페이지 렌더링
/cctv_frame 경로로 요청이 들어오면, 사용자가 로그인 상태인지 확인하고 CCTV 스트림 페이지를 렌더링합니다.
...코드_:
if 'username' in session: 사용자가 로그인했는지 확인합니다.
username = session['username']: 세션에서 사용자명을 가져옵니다.
logs = get_logs(): CCTV 로그를 가져옵니다.
stream_urls: 스트림 URL 리스트입니다.
video_feed_urls: 각 스트림에 대한 URL 리스트입니다.
for url in stream_urls: 각 URL에 대해 루프를 돌면서 스트림 URL에 맞는 비디오 피드 함수 이름을 생성합니다.
def generate_video_feed_function(url): 각 URL에 대해 비디오 피드를 생성하는 함수를 동적으로 정의합니다.
return render_template('cctv_frame.html', username=username, logs=logs, stream_urls=video_feed_urls): 최종적으로 CCTV 스트림 페이지를 렌더링합니다.
문제점
코드에서 중요한 문제가 하나 있습니다. generate_video_feed_function 함수 안에 video_feed 함수를 정의하고 라우팅을 설정하지만, 이 함수는 루프 안에서 URL을 클로저로 사용하기 때문에 각 URL에 대해 올바르게 함수가 생성되지 않습니다. 이를 해결하려면 클로저의 문제를 피하기 위해 URL을 인자로 받아 처리해야 합니다.

수정
다음과 같이 수정할 수 있습니다:
...코드_:
 이렇게 하면 각 URL에 대해 별도의 비디오 피드 함수가 제대로 생성되어 올바르게 작동합니다.

---- 6교시

이 코드의 오류는 Flask 앱이 이미 실행된 후에 라우트를 동적으로 추가하려고 시도했기 때문에 발생합니다. Flask에서는 앱이 실행된 후에는 라우트를 추가하거나 변경할 수 없습니다. 대신에 라우트를 앱이 시작되기 전에 미리 정의해야 합니다.

그러므로 generate_video_feed_function 함수 내에서 동적으로 라우트를 추가하는 대신에, 미리 라우트를 정의하고 해당 라우트가 CCTVStream을 생성하도록 수정해야 합니다.

아래는 코드를 수정한 버전입니다:
...코드_:
이렇게 하면 Flask 앱이 시작되기 전에 모든 라우트가 미리 정의되며, 라우트가 동적으로 추가되는 것을 방지할 수 있습니다.

----

이 오류는 Flask에서 엔드포인트 함수 이름이 이미 존재하는 함수와 겹치는 경우 발생합니다. 예를 들어, 이미 video_feed_route라는 이름의 함수가 있고, 다시 정의하려고 할 때 발생할 수 있습니다.

해결 방법으로는 새로운 함수에 대해 고유한 이름을 설정하거나, 기존에 있는 함수를 수정하여 다시 정의하는 것이 있습니다.

여기서는 기존의 video_feed_route 함수를 수정하여 generate_video_feed_function 함수 내에서 정의된 함수로 변경하면 됩니다.

코드를 살펴보니 generate_video_feed_route 함수에서 get_url_for_cctv 함수를 호출하여 CCTV의 URL을 가져오려고 합니다. 그러나 해당 함수가 정의되지 않았습니다. 따라서 해당 함수를 정의하거나, url 변수를 직접 사용하여 URL을 가져와야 합니다.

또한 get_url_for_cctv 함수를 사용하지 않고 각 CCTV의 URL을 직접 지정할 수도 있습니다. 아래는 코드를 수정하여 각 CCTV의 URL을 직접 지정하는 방법입니다.
...코드_:
이렇게 하면 CCTV의 URL을 직접 지정하여 사용할 수 있습니다.
----
오류를 해결하기 위해서는 cctv_frame.html 파일에서 사용하고 있는 url_for('video_feed') 함수를 존재하는 엔드포인트로 변경해야 합니다. 현재 video_feed라는 엔드포인트가 정의되어 있지 않기 때문에 해당 URL을 빌드할 수 없는 오류가 발생합니다.

이전에 코드를 수정하여 generate_video_feed_route 함수가 동적 URL 라우팅을 사용하여 CCTV의 URL을 가져오도록 했습니다. 이를 고려하여 cctv_frame.html 파일을 수정하겠습니다.

위와 같이 url_for 함수를 사용할 때 generate_video_feed_route 엔드포인트를 호출하도록 수정하였습니다. 동적 URL 라우팅을 사용하여 각 CCTV의 URL을 가져오게 됩니다.

이렇게 수정한 후에도 오류가 발생한다면 generate_video_feed_route 함수의 인자로 넘겨준 cctv_name의 형식이나 인덱스가 잘못되었는지 확인해보세요. 또한, stream_urls 리스트의 인덱스를 정확하게 매칭하여 CCTV의 URL을 가져오도록 하십시오. 오류가 지속된다면 알려주세요.
